/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Vaporize reaction.
 */
export type Vaporize = {
  /**
   * Element that triggered vaporize reaction.
   */
  trigger_element: "hydro" | "pyro";
  [k: string]: unknown;
} | null;
/**
 * Melt reaction.
 */
export type Melt = {
  /**
   * Element that triggered melt reaction.
   */
  trigger_element: "pyro" | "cryo";
  [k: string]: unknown;
} | null;
/**
 * Catalyze reaction.
 */
export type Catalyze = {
  /**
   * Type of catalyze reaction.
   */
  type: "aggravate" | "spread";
  /**
   * Bonus to the damage of the catalyze reaction.
   */
  bonus?: number;
  [k: string]: unknown;
} | null;

/**
 * Conditions and status for calculating damage dealt to enemies. Expresses the state after applying the effects of weapons and artifacts.
 */
export interface Condition {
  /**
   * Character level.
   */
  level?: number;
  /**
   * Attack.
   */
  atk?: number;
  /**
   * Defense.
   */
  def?: number;
  /**
   * Max HP.
   */
  hp?: number;
  /**
   * Whether the attack is critical.
   */
  is_crit?: boolean;
  /**
   * Critical damage increase rate.
   */
  crit_dmg?: number;
  /**
   * Elemental mastery.
   */
  elemental_mastery?: number;
  /**
   * Base skill ability that will be multiplied against the value of attack.
   */
  base_atk_ability?: number;
  /**
   * Base skill ability that will be multiplied against the value of defense.
   */
  base_def_ability?: number;
  /**
   * Base skill ability that will be multiplied against the value of max HP.
   */
  base_hp_ability?: number;
  /**
   * Base skill ability that will be multiplied against the value of elemental mastery.
   */
  base_elemental_mastery_ability?: number;
  /**
   * Bonus to the damage that will be multiplied against the value of damage. Only the increment of the multiplication must be specified. For example, if the bonus is +10%, this value should be 0.1.
   */
  base_damage_bonus?: number;
  /**
   * Additional damage multiplier that will be multiplied against the value of attack.
   */
  additive_base_damage_atk_multiplier?: number;
  /**
   * Additional damage multiplier that will be multiplied against the value of defense.
   */
  additive_base_damage_def_multiplier?: number;
  /**
   * Additional damage multiplier that will be multiplied against the value of max HP.
   */
  additive_base_damage_hp_multiplier?: number;
  /**
   * Additional damage multiplier that will be multiplied against the value of elemental mastery.
   */
  additive_base_damage_elemental_mastery_multiplier?: number;
  /**
   * Bonus to the damage that will be multiplied against the final value of damage. Only the increment of the multiplication must be specified. For example, if the bonus is +10%, this value should be 0.1.
   */
  damage_bonus?: number;
  /**
   * Enemy level.
   */
  enemy_level?: number;
  /**
   * Defense reduction.
   */
  def_reduction?: number;
  /**
   * Defense ignored.
   */
  def_ignored?: number;
  /**
   * Base resistance of the enemy.
   */
  base_res?: number;
  /**
   * Bonus to the resistance of the enemy.
   */
  res_bonus?: number;
  /**
   * Debuffs to the resistance of the enemy.
   */
  res_debuffs?: number;
  vaporize?: Vaporize;
  melt?: Melt;
  catalyze?: Catalyze;
}
