/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Conditions and status for calculating damage dealt to enemies. Expresses the state after applying the effects of weapons and artifacts.
 */
export interface Condition {
  /**
   * Character level.
   */
  level?: number;
  /**
   * Attack.
   */
  atk?: number;
  /**
   * Defense.
   */
  def?: number;
  /**
   * Max HP.
   */
  hp?: number;
  /**
   * Whether the attack is critical.
   */
  is_crit?: boolean;
  /**
   * Critical damage rate in percentage.
   */
  crit_dmg?: number;
  /**
   * Elemental mastery.
   */
  elemental_mastery?: number;
  /**
   * Base skill ability that will be multiplied against the value of attack in percentage.
   */
  base_atk_ability?: number;
  /**
   * Base skill ability that will be multiplied against the value of defense in percentage.
   */
  base_def_ability?: number;
  /**
   * Base skill ability that will be multiplied against the value of max HP in percentage.
   */
  base_hp_ability?: number;
  /**
   * Base skill ability that will be multiplied against the value of elemental mastery in percentage.
   */
  base_elemental_mastery_ability?: number;
  /**
   * Bonus to the damage that will be multiplied against the value of damage in percentage. Only the increment of the multiplication must be specified. For example, if the bonus is +10%, this value should be 0.1.
   */
  base_damage_bonus?: number;
  /**
   * Additional damage multiplier that will be multiplied against the value of attack in percentage.
   */
  additive_base_damage_atk_multiplier?: number;
  /**
   * Additional damage multiplier that will be multiplied against the value of defense in percentage.
   */
  additive_base_damage_def_multiplier?: number;
  /**
   * Additional damage multiplier that will be multiplied against the value of max HP in percentage.
   */
  additive_base_damage_hp_multiplier?: number;
  /**
   * Additional damage multiplier that will be multiplied against the value of elemental mastery in percentage.
   */
  additive_base_damage_elemental_mastery_multiplier?: number;
  /**
   * Bonus to the damage that will be multiplied against the final value of damage in percentage. Only the increment of the multiplication must be specified. For example, if the bonus is +10%, this value should be 0.1.
   */
  damage_bonus?: number;
  /**
   * Enemy level.
   */
  enemy_level?: number;
  /**
   * Defense reduction in percentage.
   */
  def_reduction?: number;
  /**
   * Defense ignored in percentage.
   */
  def_ignored?: number;
  /**
   * Base resistance of the enemy in percentage.
   */
  base_res?: number;
  /**
   * Bonus to the resistance of the enemy in percentage.
   */
  res_bonus?: number;
  /**
   * Debuffs to the resistance of the enemy in percentage.
   */
  res_debuffs?: number;
  character?: Traveller | Amber;
}
export interface Traveller {
  name: "Traveller";
  attack: number;
}
export interface Amber {
  name: "Amber";
  diff: number;
}
